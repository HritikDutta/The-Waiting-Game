#pragma once

constexpr char* ui_quad_vert_shader_source = "#version 330 core\n\nlayout(location = 0) in vec3 position;\nlayout(location = 1) in vec2 texCoord;\nlayout(location = 2) in vec4 color;\nlayout(location = 3) in float texIndex;\n\nuniform sampler2D u_textures[10];\n\nout vec2 v_texCoord;\nout vec4 v_color;\nout float v_texIndex;\n\nvoid main()\n{\n    v_texCoord = texCoord;\n    v_color = color;\n    v_texIndex = texIndex;\n    gl_Position = vec4(position, 1.0);\n}";
constexpr char* ui_quad_frag_shader_source = "#version 330 core\n\nin vec2 v_texCoord;\nin vec4 v_color;\nin float v_texIndex;\n\nuniform sampler2D u_textures[10];\n\nout vec4 color;\n\nvoid main()\n{\n    color = v_color * texture(u_textures[int(v_texIndex)], v_texCoord);\n}";
constexpr char* ui_font_vert_shader_source = "#version 330 core\n\nlayout(location = 0) in vec3 position;\nlayout(location = 1) in vec2 texCoord;\nlayout(location = 2) in vec4 color;\nlayout(location = 3) in float texIndex;\n\nuniform sampler2D u_textures[10];\n\nout vec2 v_texCoord;\nout vec4 v_color;\nout float v_texIndex;\n\nvoid main()\n{\n    v_texCoord = texCoord;\n    v_color = color;\n    v_texIndex = texIndex;\n    gl_Position = vec4(position, 1.0);\n}";
constexpr char* ui_font_frag_shader_source = "#version 330 core\n\nin vec2 v_texCoord;\nin vec4 v_color;\nin float v_texIndex;\n\nuniform sampler2D u_textures[10];\n\nout vec4 color;\n\nfloat median(float r, float g, float b)\n{\n    return max(min(r, g), min(max(r, g), b));\n}\n\nvoid main()\n{\n    vec4 sample = texture(u_textures[int(v_texIndex)], v_texCoord);\n    ivec2 size = textureSize(u_textures[int(v_texIndex)], 0).xy;\n\n    float dx = dFdx(v_texCoord.x) * size.x;\n    float dy = dFdy(v_texCoord.y) * size.y;\n    float toPixels = 8.0 * inversesqrt(dx * dx + dy * dy);\n    float sigDist = median(sample.r, sample.g, sample.b);\n    float w = fwidth(sigDist);\n    float alpha = smoothstep(0.5 - w, 0.5 + w, sigDist);\n    \n    color = v_color * vec4(1, 1, 1, alpha);\n}";
